<Group Name="libangle_common_sources">
	<Src>src/common/Float16ToFloat32.cpp</Src>
	<Src>src/common/MemoryBuffer.cpp</Src>
	<Src>src/common/PackedEGLEnums_autogen.cpp</Src>
	<Src>src/common/PackedEnums.cpp</Src>
	<Src>src/common/PackedGLEnums_autogen.cpp</Src>
	<Src>src/common/aligned_memory.cpp</Src>
	<Src>src/common/angleutils.cpp</Src>
	<Src>src/common/debug.cpp</Src>
	<Src>src/common/mathutil.cpp</Src>
	<Src>src/common/matrix_utils.cpp</Src>
	<Src>src/common/string_utils.cpp</Src>
	<Src>src/common/system_utils.cpp</Src>
	<Src>src/common/third_party/base/anglebase/sha1.cc</Src>
	<Src>src/common/third_party/smhasher/src/PMurHash.cpp</Src>
	<Src>src/common/tls.cpp</Src>
	<Src>src/common/uniform_type_info_autogen.cpp</Src>
	<Src>src/common/utilities.cpp</Src>
</Group>
<Group Name="libangle_common_linux_sources">
	<Src>src/common/system_utils_linux.cpp</Src>
</Group>
<Group Name="libangle_common_mac_sources">
	<Src>src/common/system_utils_mac.cpp</Src>
</Group>
<Group Name="libangle_common_win_sources">
	<Src>src/common/system_utils_win.cpp</Src>
</Group>
<Group Name="libangle_image_util_sources">
	<Src>src/image_util/copyimage.cpp</Src>
	<Src>src/image_util/imageformats.cpp</Src>
	<Src>src/image_util/loadimage.cpp</Src>
	<Src>src/image_util/loadimage_etc.cpp</Src>
</Group>
<Group Name="libangle_sources">
	<Src>src/common/event_tracer.cpp</Src>
	<Src>src/libANGLE/AttributeMap.cpp</Src>
	<Src>src/libANGLE/Buffer.cpp</Src>
	<Src>src/libANGLE/Caps.cpp</Src>
	<Src>src/libANGLE/Compiler.cpp</Src>
	<Src>src/libANGLE/Config.cpp</Src>
	<Src>src/libANGLE/Context.cpp</Src>
	<Src>src/libANGLE/Context_gles_1_0.cpp</Src>
	<Src>src/libANGLE/ContextState.cpp</Src>
	<Src>src/libANGLE/Debug.cpp</Src>
	<Src>src/libANGLE/Device.cpp</Src>
	<Src>src/libANGLE/Display.cpp</Src>
	<Src>src/libANGLE/Error.cpp</Src>
	<Src>src/libANGLE/Fence.cpp</Src>
	<Src>src/libANGLE/Framebuffer.cpp</Src>
	<Src>src/libANGLE/FramebufferAttachment.cpp</Src>
	<Src>src/libANGLE/GLES1Renderer.cpp</Src>
	<Src>src/libANGLE/GLES1State.cpp</Src>
	<Src>src/libANGLE/HandleAllocator.cpp</Src>
	<Src>src/libANGLE/HandleRangeAllocator.cpp</Src>
	<Src>src/libANGLE/Image.cpp</Src>
	<Src>src/libANGLE/ImageIndex.cpp</Src>
	<Src>src/libANGLE/IndexRangeCache.cpp</Src>
	<Src>src/libANGLE/LoggingAnnotator.cpp</Src>
	<Src>src/libANGLE/MemoryProgramCache.cpp</Src>
	<Src>src/libANGLE/Observer.cpp</Src>
	<Src>src/libANGLE/Path.cpp</Src>
	<Src>src/libANGLE/Platform.cpp</Src>
	<Src>src/libANGLE/Program.cpp</Src>
	<Src>src/libANGLE/ProgramLinkedResources.cpp</Src>
	<Src>src/libANGLE/ProgramPipeline.cpp</Src>
	<Src>src/libANGLE/Query.cpp</Src>
	<Src>src/libANGLE/Renderbuffer.cpp</Src>
	<Src>src/libANGLE/ResourceManager.cpp</Src>
	<Src>src/libANGLE/Sampler.cpp</Src>
	<Src>src/libANGLE/Shader.cpp</Src>
	<Src>src/libANGLE/State.cpp</Src>
	<Src>src/libANGLE/Stream.cpp</Src>
	<Src>src/libANGLE/Surface.cpp</Src>
	<Src>src/libANGLE/Texture.cpp</Src>
	<Src>src/libANGLE/Thread.cpp</Src>
	<Src>src/libANGLE/TransformFeedback.cpp</Src>
	<Src>src/libANGLE/Uniform.cpp</Src>
	<Src>src/libANGLE/VaryingPacking.cpp</Src>
	<Src>src/libANGLE/VertexArray.cpp</Src>
	<Src>src/libANGLE/VertexAttribute.cpp</Src>
	<Src>src/libANGLE/WorkerThread.cpp</Src>
	<Src>src/libANGLE/angletypes.cpp</Src>
	<Src>src/libANGLE/es3_copy_conversion_table_autogen.cpp</Src>
	<Src>src/libANGLE/format_map_autogen.cpp</Src>
	<Src>src/libANGLE/formatutils.cpp</Src>
	<Src>src/libANGLE/params.cpp</Src>
	<Src>src/libANGLE/queryconversions.cpp</Src>
	<Src>src/libANGLE/queryutils.cpp</Src>
	<Src>src/libANGLE/renderer/ContextImpl.cpp</Src>
	<Src>src/libANGLE/renderer/driver_utils.cpp</Src>
	<Src>src/libANGLE/renderer/DeviceImpl.cpp</Src>
	<Src>src/libANGLE/renderer/DisplayImpl.cpp</Src>
	<Src>src/libANGLE/renderer/Format_table_autogen.cpp</Src>
	<Src>src/libANGLE/renderer/SurfaceImpl.cpp</Src>
	<Src>src/libANGLE/renderer/TextureImpl.cpp</Src>
	<Src>src/libANGLE/renderer/load_functions_table_autogen.cpp</Src>
	<Src>src/libANGLE/renderer/renderer_utils.cpp</Src>
	<Src>src/libANGLE/validationEGL.cpp</Src>
	<Src>src/libANGLE/validationES.cpp</Src>
	<Src>src/libANGLE/validationES1.cpp</Src>
	<Src>src/libANGLE/validationES2.cpp</Src>
	<Src>src/libANGLE/validationES3.cpp</Src>
	<Src>src/libANGLE/validationES31.cpp</Src>
</Group>
<Group Name="libangle_d3d_shared_sources">
	<Src>src/libANGLE/renderer/d3d/BufferD3D.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/CompilerD3D.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/DeviceD3D.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/DisplayD3D.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/DynamicHLSL.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/EGLImageD3D.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/FramebufferD3D.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/HLSLCompiler.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/ImageD3D.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/IndexBuffer.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/IndexDataManager.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/NativeWindowD3D.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/ProgramD3D.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/RenderbufferD3D.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/RendererD3D.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/RenderTargetD3D.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/ShaderD3D.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/ShaderExecutableD3D.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/SurfaceD3D.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/SwapChainD3D.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/TextureD3D.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/VertexBuffer.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/VertexDataManager.cpp</Src>
</Group>
<Group Name="libangle_d3d9_sources">
	<Src>src/libANGLE/renderer/d3d/d3d9/Blit9.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d9/Buffer9.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d9/Context9.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d9/DebugAnnotator9.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d9/Fence9.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d9/formatutils9.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d9/Framebuffer9.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d9/Image9.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d9/IndexBuffer9.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d9/NativeWindow9.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d9/Query9.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d9/Renderer9.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d9/renderer9_utils.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d9/RenderTarget9.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d9/ShaderExecutable9.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d9/StateManager9.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d9/SwapChain9.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d9/TextureStorage9.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d9/VertexBuffer9.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d9/VertexDeclarationCache.cpp</Src>
</Group>
<Group Name="libangle_d3d11_sources">
	<Src>src/libANGLE/renderer/d3d/d3d11/Blit11.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d11/Buffer11.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d11/Clear11.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d11/Context11.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d11/DebugAnnotator11.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d11/dxgi_format_map_autogen.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d11/dxgi_support_table.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d11/Fence11.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d11/formatutils11.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d11/Framebuffer11.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d11/Image11.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d11/IndexBuffer11.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d11/InputLayoutCache.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d11/PixelTransfer11.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d11/Program11.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d11/ProgramPipeline11.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d11/Query11.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d11/Renderer11.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d11/renderer11_utils.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d11/RenderStateCache.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d11/RenderTarget11.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d11/ResourceManager11.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d11/ShaderExecutable11.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d11/StateManager11.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d11/StreamProducerD3DTexture.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d11/SwapChain11.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d11/texture_format_table.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d11/texture_format_table_autogen.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d11/TextureStorage11.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d11/TransformFeedback11.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d11/Trim11.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d11/VertexArray11.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d11/VertexBuffer11.cpp</Src>
</Group>
<Group Name="libangle_d3d11_win32_sources">
	<Src>src/libANGLE/renderer/d3d/d3d11/win32/NativeWindow11Win32.cpp</Src>
	<Src>src/third_party/systeminfo/SystemInfo.cpp</Src>
</Group>
<Group Name="libangle_d3d11_winrt_sources">
	<Src>src/libANGLE/renderer/d3d/d3d11/winrt/CoreWindowNativeWindow.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d11/winrt/InspectableNativeWindow.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d11/winrt/NativeWindow11WinRT.cpp</Src>
	<Src>src/libANGLE/renderer/d3d/d3d11/winrt/SwapChainPanelNativeWindow.cpp</Src>
</Group>
<Group Name="libangle_gl_sources">
	<Src>src/libANGLE/renderer/gl/BlitGL.cpp</Src>
	<Src>src/libANGLE/renderer/gl/BufferGL.cpp</Src>
	<Src>src/libANGLE/renderer/gl/ClearMultiviewGL.cpp</Src>
	<Src>src/libANGLE/renderer/gl/CompilerGL.cpp</Src>
	<Src>src/libANGLE/renderer/gl/ContextGL.cpp</Src>
	<Src>src/libANGLE/renderer/gl/DispatchTableGL_autogen.cpp</Src>
	<Src>src/libANGLE/renderer/gl/DisplayGL.cpp</Src>
	<Src>src/libANGLE/renderer/gl/FenceNVGL.cpp</Src>
	<Src>src/libANGLE/renderer/gl/FramebufferGL.cpp</Src>
	<Src>src/libANGLE/renderer/gl/FunctionsGL.cpp</Src>
	<Src>src/libANGLE/renderer/gl/ImageGL.cpp</Src>
	<Src>src/libANGLE/renderer/gl/PathGL.cpp</Src>
	<Src>src/libANGLE/renderer/gl/ProgramGL.cpp</Src>
	<Src>src/libANGLE/renderer/gl/ProgramPipelineGL.cpp</Src>
	<Src>src/libANGLE/renderer/gl/QueryGL.cpp</Src>
	<Src>src/libANGLE/renderer/gl/RenderbufferGL.cpp</Src>
	<Src>src/libANGLE/renderer/gl/RendererGL.cpp</Src>
	<Src>src/libANGLE/renderer/gl/SamplerGL.cpp</Src>
	<Src>src/libANGLE/renderer/gl/ShaderGL.cpp</Src>
	<Src>src/libANGLE/renderer/gl/StateManagerGL.cpp</Src>
	<Src>src/libANGLE/renderer/gl/SurfaceGL.cpp</Src>
	<Src>src/libANGLE/renderer/gl/SyncGL.cpp</Src>
	<Src>src/libANGLE/renderer/gl/TextureGL.cpp</Src>
	<Src>src/libANGLE/renderer/gl/TransformFeedbackGL.cpp</Src>
	<Src>src/libANGLE/renderer/gl/VertexArrayGL.cpp</Src>
	<Src>src/libANGLE/renderer/gl/formatutilsgl.cpp</Src>
	<Src>src/libANGLE/renderer/gl/renderergl_utils.cpp</Src>
</Group>
<Group Name="libangle_gl_null_sources">
	<Src>src/libANGLE/renderer/gl/null_functions.cpp</Src>
</Group>
<Group Name="libangle_gl_wgl_sources">
	<Src>src/libANGLE/renderer/gl/wgl/ContextWGL.cpp</Src>
	<Src>src/libANGLE/renderer/gl/wgl/D3DTextureSurfaceWGL.cpp</Src>
	<Src>src/libANGLE/renderer/gl/wgl/DisplayWGL.cpp</Src>
	<Src>src/libANGLE/renderer/gl/wgl/DXGISwapChainWindowSurfaceWGL.cpp</Src>
	<Src>src/libANGLE/renderer/gl/wgl/FunctionsWGL.cpp</Src>
	<Src>src/libANGLE/renderer/gl/wgl/PbufferSurfaceWGL.cpp</Src>
	<Src>src/libANGLE/renderer/gl/wgl/RendererWGL.cpp</Src>
	<Src>src/libANGLE/renderer/gl/wgl/WindowSurfaceWGL.cpp</Src>
	<Src>src/libANGLE/renderer/gl/wgl/wgl_utils.cpp</Src>
</Group>
<Group Name="libangle_gl_glx_sources">
	<Src>src/libANGLE/renderer/gl/glx/DisplayGLX.cpp</Src>
	<Src>src/libANGLE/renderer/gl/glx/FunctionsGLX.cpp</Src>
	<Src>src/libANGLE/renderer/gl/glx/PbufferSurfaceGLX.cpp</Src>
	<Src>src/libANGLE/renderer/gl/glx/WindowSurfaceGLX.cpp</Src>
</Group>
<Group Name="libangle_gl_egl_sources">
	<Src>src/libANGLE/renderer/gl/egl/ContextEGL.cpp</Src>
	<Src>src/libANGLE/renderer/gl/egl/DisplayEGL.cpp</Src>
	<Src>src/libANGLE/renderer/gl/egl/egl_utils.cpp</Src>
	<Src>src/libANGLE/renderer/gl/egl/FunctionsEGL.cpp</Src>
	<Src>src/libANGLE/renderer/gl/egl/ImageEGL.cpp</Src>
	<Src>src/libANGLE/renderer/gl/egl/PbufferSurfaceEGL.cpp</Src>
	<Src>src/libANGLE/renderer/gl/egl/RendererEGL.cpp</Src>
	<Src>src/libANGLE/renderer/gl/egl/SurfaceEGL.cpp</Src>
	<Src>src/libANGLE/renderer/gl/egl/WindowSurfaceEGL.cpp</Src>
</Group>
<Group Name="libangle_gl_egl_dl_sources">
	<Src>src/libANGLE/renderer/gl/egl/FunctionsEGLDL.cpp</Src>
</Group>
<Group Name="libangle_gl_ozone_sources">
	<Src>src/libANGLE/renderer/gl/egl/ozone/DisplayOzone.cpp</Src>
	<Src>src/libANGLE/renderer/gl/egl/ozone/SurfaceOzone.cpp</Src>
</Group>
<Group Name="libangle_gl_egl_android_sources">
	<Src>src/libANGLE/renderer/gl/egl/android/DisplayAndroid.cpp</Src>
</Group>
<Group Name="libangle_gl_cgl_sources">
</Group>
<Group Name="libangle_vulkan_sources">
	<Src>src/libANGLE/renderer/vulkan/BufferVk.cpp</Src>
	<Src>src/libANGLE/renderer/vulkan/CommandGraph.cpp</Src>
	<Src>src/libANGLE/renderer/vulkan/CompilerVk.cpp</Src>
	<Src>src/libANGLE/renderer/vulkan/ContextVk.cpp</Src>
	<Src>src/libANGLE/renderer/vulkan/DeviceVk.cpp</Src>
	<Src>src/libANGLE/renderer/vulkan/DisplayVk.cpp</Src>
	<Src>src/libANGLE/renderer/vulkan/FenceNVVk.cpp</Src>
	<Src>src/libANGLE/renderer/vulkan/FramebufferVk.cpp</Src>
	<Src>src/libANGLE/renderer/vulkan/GlslangWrapper.cpp</Src>
	<Src>src/libANGLE/renderer/vulkan/ImageVk.cpp</Src>
	<Src>src/libANGLE/renderer/vulkan/ProgramVk.cpp</Src>
	<Src>src/libANGLE/renderer/vulkan/ProgramPipelineVk.cpp</Src>
	<Src>src/libANGLE/renderer/vulkan/QueryVk.cpp</Src>
	<Src>src/libANGLE/renderer/vulkan/RenderbufferVk.cpp</Src>
	<Src>src/libANGLE/renderer/vulkan/RendererVk.cpp</Src>
	<Src>src/libANGLE/renderer/vulkan/RenderTargetVk.cpp</Src>
	<Src>src/libANGLE/renderer/vulkan/SamplerVk.cpp</Src>
	<Src>src/libANGLE/renderer/vulkan/ShaderVk.cpp</Src>
	<Src>src/libANGLE/renderer/vulkan/SurfaceVk.cpp</Src>
	<Src>src/libANGLE/renderer/vulkan/SyncVk.cpp</Src>
	<Src>src/libANGLE/renderer/vulkan/TextureVk.cpp</Src>
	<Src>src/libANGLE/renderer/vulkan/TransformFeedbackVk.cpp</Src>
	<Src>src/libANGLE/renderer/vulkan/VertexArrayVk.cpp</Src>
	<Src>src/libANGLE/renderer/vulkan/vk_cache_utils.cpp</Src>
	<Src>src/libANGLE/renderer/vulkan/vk_caps_utils.cpp</Src>
	<Src>src/libANGLE/renderer/vulkan/vk_format_table_autogen.cpp</Src>
	<Src>src/libANGLE/renderer/vulkan/vk_format_utils.cpp</Src>
	<Src>src/libANGLE/renderer/vulkan/vk_helpers.cpp</Src>
	<Src>src/libANGLE/renderer/vulkan/vk_internal_shaders.cpp</Src>
	<Src>src/libANGLE/renderer/vulkan/vk_internal_shaders_autogen.cpp</Src>
	<Src>src/libANGLE/renderer/vulkan/vk_mandatory_format_support_table_autogen.cpp</Src>
	<Src>src/libANGLE/renderer/vulkan/vk_utils.cpp</Src>
</Group>
<Group Name="libangle_vulkan_android_sources">
	<Src>src/libANGLE/renderer/vulkan/android/DisplayVkAndroid.cpp</Src>
	<Src>src/libANGLE/renderer/vulkan/android/WindowSurfaceVkAndroid.cpp</Src>
</Group>
<Group Name="libangle_vulkan_win32_sources">
	<Src>src/libANGLE/renderer/vulkan/win32/DisplayVkWin32.cpp</Src>
	<Src>src/libANGLE/renderer/vulkan/win32/WindowSurfaceVkWin32.cpp</Src>
</Group>
<Group Name="libangle_vulkan_xcb_sources">
	<Src>src/libANGLE/renderer/vulkan/xcb/DisplayVkXcb.cpp</Src>
	<Src>src/libANGLE/renderer/vulkan/xcb/WindowSurfaceVkXcb.cpp</Src>
</Group>
<Group Name="libangle_null_sources">
	<Src>src/libANGLE/renderer/null/BufferNULL.cpp</Src>
	<Src>src/libANGLE/renderer/null/CompilerNULL.cpp</Src>
	<Src>src/libANGLE/renderer/null/ContextNULL.cpp</Src>
	<Src>src/libANGLE/renderer/null/DeviceNULL.cpp</Src>
	<Src>src/libANGLE/renderer/null/DisplayNULL.cpp</Src>
	<Src>src/libANGLE/renderer/null/FenceNVNULL.cpp</Src>
	<Src>src/libANGLE/renderer/null/FramebufferNULL.cpp</Src>
	<Src>src/libANGLE/renderer/null/ImageNULL.cpp</Src>
	<Src>src/libANGLE/renderer/null/PathNULL.cpp</Src>
	<Src>src/libANGLE/renderer/null/ProgramNULL.cpp</Src>
	<Src>src/libANGLE/renderer/null/ProgramPipelineNULL.cpp</Src>
	<Src>src/libANGLE/renderer/null/QueryNULL.cpp</Src>
	<Src>src/libANGLE/renderer/null/RenderbufferNULL.cpp</Src>
	<Src>src/libANGLE/renderer/null/SamplerNULL.cpp</Src>
	<Src>src/libANGLE/renderer/null/ShaderNULL.cpp</Src>
	<Src>src/libANGLE/renderer/null/SurfaceNULL.cpp</Src>
	<Src>src/libANGLE/renderer/null/SyncNULL.cpp</Src>
	<Src>src/libANGLE/renderer/null/TextureNULL.cpp</Src>
	<Src>src/libANGLE/renderer/null/TransformFeedbackNULL.cpp</Src>
	<Src>src/libANGLE/renderer/null/VertexArrayNULL.cpp</Src>
</Group>
<Group Name="libglesv2_sources">
	<Src>src/libGLESv2/entry_points_egl.cpp</Src>
	<Src>src/libGLESv2/entry_points_egl_ext.cpp</Src>
	<Src>src/libGLESv2/entry_points_gles_1_0_autogen.cpp</Src>
	<Src>src/libGLESv2/entry_points_gles_2_0_autogen.cpp</Src>
	<Src>src/libGLESv2/entry_points_gles_3_0_autogen.cpp</Src>
	<Src>src/libGLESv2/entry_points_gles_3_1_autogen.cpp</Src>
	<Src>src/libGLESv2/entry_points_gles_ext_autogen.cpp</Src>
	<Src>src/libGLESv2/global_state.cpp</Src>
	<Src>src/libGLESv2/libGLESv2_autogen.cpp</Src>
	<Src>src/libGLESv2/proc_table_autogen.cpp</Src>
</Group>
<Group Name="libglesv1_cm_sources">
	<Src>src/libGLESv1_CM/libGLESv1_CM.cpp</Src>
</Group>
<Group Name="libegl_sources">
	<Src>src/libEGL/libEGL.cpp</Src>
</Group>

<Group Name="angle_translator_sources">
	<Src>src/compiler/translator/BuiltInFunctionEmulator.cpp</Src>
	<Src>src/compiler/translator/CallDAG.cpp</Src>
	<Src>src/compiler/translator/CodeGen.cpp</Src>
	<Src>src/compiler/translator/CollectVariables.cpp</Src>
	<Src>src/compiler/translator/Compiler.cpp</Src>
	<Src>src/compiler/translator/ConstantUnion.cpp</Src>
	<Src>src/compiler/translator/Declarator.cpp</Src>
	<Src>src/compiler/translator/Diagnostics.cpp</Src>
	<Src>src/compiler/translator/DirectiveHandler.cpp</Src>
	<Src>src/compiler/translator/ExtensionBehavior.cpp</Src>
	<Src>src/compiler/translator/FlagStd140Structs.cpp</Src>
	<Src>src/compiler/translator/FunctionLookup.cpp</Src>
	<Src>src/compiler/translator/HashNames.cpp</Src>
	<Src>src/compiler/translator/ImmutableString.cpp</Src>
	<Src>src/compiler/translator/ImmutableStringBuilder.cpp</Src>
	<Src>src/compiler/translator/InfoSink.cpp</Src>
	<Src>src/compiler/translator/Initialize.cpp</Src>
	<Src>src/compiler/translator/InitializeDll.cpp</Src>
	<Src>src/compiler/translator/IntermNode.cpp</Src>
	<Src>src/compiler/translator/IsASTDepthBelowLimit.cpp</Src>
	<Src>src/compiler/translator/Operator.cpp</Src>
	<Src>src/compiler/translator/OutputTree.cpp</Src>
	<Src>src/compiler/translator/ParseContext.cpp</Src>
	<Src>src/compiler/translator/PoolAlloc.cpp</Src>
	<Src>src/compiler/translator/QualifierTypes.cpp</Src>
	<Src>src/compiler/translator/ShaderLang.cpp</Src>
	<Src>src/compiler/translator/ShaderVars.cpp</Src>
	<Src>src/compiler/translator/Symbol.cpp</Src>
	<Src>src/compiler/translator/SymbolTable.cpp</Src>
	<Src>src/compiler/translator/SymbolTable_autogen.cpp</Src>
	<Src>src/compiler/translator/SymbolUniqueId.cpp</Src>
	<Src>src/compiler/translator/Types.cpp</Src>
	<Src>src/compiler/translator/ValidateGlobalInitializer.cpp</Src>
	<Src>src/compiler/translator/ValidateLimitations.cpp</Src>
	<Src>src/compiler/translator/ValidateMaxParameters.cpp</Src>
	<Src>src/compiler/translator/ValidateOutputs.cpp</Src>
	<Src>src/compiler/translator/ValidateSwitch.cpp</Src>
	<Src>src/compiler/translator/ValidateVaryingLocations.cpp</Src>
	<Src>src/compiler/translator/VariablePacker.cpp</Src>
	<Src>src/compiler/translator/blocklayout.cpp</Src>
	<Src>src/compiler/translator/glslang_lex.cpp</Src>
	<Src>src/compiler/translator/glslang_tab.cpp</Src>
	<Src>src/compiler/translator/util.cpp</Src>
	<Src>src/compiler/translator/tree_ops/AddAndTrueToLoopCondition.cpp</Src>
	<Src>src/compiler/translator/tree_ops/BreakVariableAliasingInInnerLoops.cpp</Src>
	<Src>src/compiler/translator/tree_ops/ClampFragDepth.cpp</Src>
	<Src>src/compiler/translator/tree_ops/ClampPointSize.cpp</Src>
	<Src>src/compiler/translator/tree_ops/DeclareAndInitBuiltinsForInstancedMultiview.cpp</Src>
	<Src>src/compiler/translator/tree_ops/DeferGlobalInitializers.cpp</Src>
	<Src>src/compiler/translator/tree_ops/EmulateGLFragColorBroadcast.cpp</Src>
	<Src>src/compiler/translator/tree_ops/EmulatePrecision.cpp</Src>
	<Src>src/compiler/translator/tree_ops/ExpandIntegerPowExpressions.cpp</Src>
	<Src>src/compiler/translator/tree_ops/FoldExpressions.cpp</Src>
	<Src>src/compiler/translator/tree_ops/InitializeVariables.cpp</Src>
	<Src>src/compiler/translator/tree_ops/NameEmbeddedUniformStructs.cpp</Src>
	<Src>src/compiler/translator/tree_ops/PruneEmptyCases.cpp</Src>
	<Src>src/compiler/translator/tree_ops/PruneNoOps.cpp</Src>
	<Src>src/compiler/translator/tree_ops/RecordConstantPrecision.cpp</Src>
	<Src>src/compiler/translator/tree_ops/RegenerateStructNames.cpp</Src>
	<Src>src/compiler/translator/tree_ops/RemoveArrayLengthMethod.cpp</Src>
	<Src>src/compiler/translator/tree_ops/RemoveInvariantDeclaration.cpp</Src>
	<Src>src/compiler/translator/tree_ops/RemovePow.cpp</Src>
	<Src>src/compiler/translator/tree_ops/RemoveUnreferencedVariables.cpp</Src>
	<Src>src/compiler/translator/tree_ops/RewriteAtomicFunctionExpressions.cpp</Src>
	<Src>src/compiler/translator/tree_ops/RewriteDoWhile.cpp</Src>
	<Src>src/compiler/translator/tree_ops/RewriteStructSamplers.cpp</Src>
	<Src>src/compiler/translator/tree_ops/RewriteRepeatedAssignToSwizzled.cpp</Src>
	<Src>src/compiler/translator/tree_ops/RewriteTexelFetchOffset.cpp</Src>
	<Src>src/compiler/translator/tree_ops/RewriteUnaryMinusOperatorFloat.cpp</Src>
	<Src>src/compiler/translator/tree_ops/RewriteUnaryMinusOperatorInt.cpp</Src>
	<Src>src/compiler/translator/tree_ops/ScalarizeVecAndMatConstructorArgs.cpp</Src>
	<Src>src/compiler/translator/tree_ops/SeparateDeclarations.cpp</Src>
	<Src>src/compiler/translator/tree_ops/SimplifyLoopConditions.cpp</Src>
	<Src>src/compiler/translator/tree_ops/SplitSequenceOperator.cpp</Src>
	<Src>src/compiler/translator/tree_ops/UnfoldShortCircuitAST.cpp</Src>
	<Src>src/compiler/translator/tree_ops/UseInterfaceBlockFields.cpp</Src>
	<Src>src/compiler/translator/tree_ops/VectorizeVectorScalarArithmetic.cpp</Src>
	<Src>src/compiler/translator/tree_util/FindMain.cpp</Src>
	<Src>src/compiler/translator/tree_util/FindSymbolNode.cpp</Src>
	<Src>src/compiler/translator/tree_util/IntermNodePatternMatcher.cpp</Src>
	<Src>src/compiler/translator/tree_util/IntermNode_util.cpp</Src>
	<Src>src/compiler/translator/tree_util/IntermTraverse.cpp</Src>
	<Src>src/compiler/translator/tree_util/ReplaceVariable.cpp</Src>
	<Src>src/compiler/translator/tree_util/RunAtTheEndOfShader.cpp</Src>
	<Src>src/third_party/compiler/ArrayBoundsClamper.cpp</Src>
</Group>
<Group Name="angle_translator_essl_sources">
	<Src>src/compiler/translator/OutputESSL.cpp</Src>
	<Src>src/compiler/translator/TranslatorESSL.cpp</Src>
</Group>
<Group Name="angle_translator_glsl_sources">
	<Src>src/compiler/translator/BuiltInFunctionEmulatorGLSL.cpp</Src>
	<Src>src/compiler/translator/ExtensionGLSL.cpp</Src>
	<Src>src/compiler/translator/OutputGLSL.cpp</Src>
	<Src>src/compiler/translator/OutputGLSLBase.cpp</Src>
	<Src>src/compiler/translator/TranslatorGLSL.cpp</Src>
	<Src>src/compiler/translator/VersionGLSL.cpp</Src>
</Group>
<Group Name="angle_translator_hlsl_sources">
	<Src>src/compiler/translator/ASTMetadataHLSL.cpp</Src>
	<Src>src/compiler/translator/blocklayoutHLSL.cpp</Src>
	<Src>src/compiler/translator/BuiltInFunctionEmulatorHLSL.cpp</Src>
	<Src>src/compiler/translator/OutputHLSL.cpp</Src>
	<Src>src/compiler/translator/StructureHLSL.cpp</Src>
	<Src>src/compiler/translator/TextureFunctionHLSL.cpp</Src>
	<Src>src/compiler/translator/ImageFunctionHLSL.cpp</Src>
	<Src>src/compiler/translator/TranslatorHLSL.cpp</Src>
	<Src>src/compiler/translator/UniformHLSL.cpp</Src>
	<Src>src/compiler/translator/UtilsHLSL.cpp</Src>
	<Src>src/compiler/translator/emulated_builtin_functions_hlsl_autogen.cpp</Src>
	<Src>src/compiler/translator/tree_ops/AddDefaultReturnStatements.cpp</Src>
	<Src>src/compiler/translator/tree_ops/ArrayReturnValueToOutParameter.cpp</Src>
	<Src>src/compiler/translator/tree_ops/RemoveDynamicIndexing.cpp</Src>
	<Src>src/compiler/translator/tree_ops/RemoveSwitchFallThrough.cpp</Src>
	<Src>src/compiler/translator/tree_ops/RewriteElseBlocks.cpp</Src>
	<Src>src/compiler/translator/tree_ops/SeparateArrayConstructorStatements.cpp</Src>
	<Src>src/compiler/translator/tree_ops/SeparateArrayInitialization.cpp</Src>
	<Src>src/compiler/translator/tree_ops/SeparateExpressionsReturningArrays.cpp</Src>
	<Src>src/compiler/translator/tree_ops/UnfoldShortCircuitToIf.cpp</Src>
	<Src>src/compiler/translator/tree_ops/WrapSwitchStatementsInBlocks.cpp</Src>
</Group>
<Group Name="angle_translator_lib_vulkan_sources">
	<Src>src/compiler/translator/OutputVulkanGLSL.cpp</Src>
	<Src>src/compiler/translator/TranslatorVulkan.cpp</Src>
</Group>
<Group Name="angle_preprocessor_sources">
	<Src>src/compiler/preprocessor/DiagnosticsBase.cpp</Src>
	<Src>src/compiler/preprocessor/DirectiveHandlerBase.cpp</Src>
	<Src>src/compiler/preprocessor/DirectiveParser.cpp</Src>
	<Src>src/compiler/preprocessor/ExpressionParser.cpp</Src>
	<Src>src/compiler/preprocessor/Input.cpp</Src>
	<Src>src/compiler/preprocessor/Lexer.cpp</Src>
	<Src>src/compiler/preprocessor/Macro.cpp</Src>
	<Src>src/compiler/preprocessor/MacroExpander.cpp</Src>
	<Src>src/compiler/preprocessor/Preprocessor.cpp</Src>
	<Src>src/compiler/preprocessor/Token.cpp</Src>
	<Src>src/compiler/preprocessor/Tokenizer.cpp</Src>
</Group>


<Target Name="configs" Execute="false">
	<Flags>
		$(META:angle.flags)
		-Isrc
		-Isrc/common/third_party/base
		-Isrc/third_party/khronos
	</Flags>
</Target>

<Target Name="reference_win" Base="configs" Execute="false">
	<Meta Name="angle.flags">
		-D_CRT_SECURE_NO_WARNINGS
		-DNOMINMAX
		-DANGLE_ENABLE_D3D11
		-DANGLE_ENABLE_D3D9
		-DANGLE_ENABLE_OPENGL
		-DANGLE_ENABLE_HLSL
		-DANGLE_ENABLE_GLSL
		-DGL_GLEXT_PROTOTYPES
		-DGL_API=
		-DGL_APICALL=
		-DGL_APIENTRY=
		-DEGLAPI=
		-DEGLAPIENTRY=
		-DANGLE_EXPORT=
		-I$(CURDIR)include
	</Meta>

	<Group>libangle_sources</Group>
	<Group>libangle_common_sources</Group>
	<Group>libangle_common_win_sources</Group>
	<Group>libangle_image_util_sources</Group>
	<Group>libangle_d3d_shared_sources</Group>
	<Group>libangle_d3d9_sources</Group>
	<Group>libangle_d3d11_sources</Group>
	<Group>libangle_d3d11_win32_sources</Group>
	<Group>libangle_gl_sources</Group>
	<Group>libangle_gl_wgl_sources</Group>
	<Group>libegl_sources</Group>
	<Group>libglesv2_sources</Group>

	<Group>angle_preprocessor_sources</Group>
	<Group>angle_translator_essl_sources</Group>
	<Group>angle_translator_glsl_sources</Group>
	<Group>angle_translator_hlsl_sources</Group>
	<Group>angle_translator_sources</Group>
</Target>

